name: Build Vulkan Engine

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Vulkan SDK
      uses: jakoch/install-vulkan-sdk@v1.3
      with:
        vulkan-sdk-version: 1.3.250.1
      
    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install Dependencies
      run: |
        choco install cmake
        choco install ninja

    - name: Configure CMake
      run: |
        cmake -B build -G "Ninja" -DCMAKE_BUILD_TYPE=Release

    - name: Build
      run: cmake --build build --config Release

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: VulkanEngine-Windows
        path: build/VulkanEngine.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Vulkan SDK
      run: |
        wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.asc
        sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan.list https://packages.lunarg.com/vulkan/lunarg-vulkan.list
        sudo apt update
        sudo apt install -y vulkan-sdk libvulkan-dev glslc

    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y cmake g++ libglfw3-dev libvulkan-dev

    - name: Configure CMake
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Release

    - name: Build
      run: cmake --build build

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: VulkanEngine-Linux
        path: build/VulkanEngine

  release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Download Windows Artifact
      uses: actions/download-artifact@v4
      with:
        name: VulkanEngine-Windows
        path: windows-build

    - name: Download Linux Artifact
      uses: actions/download-artifact@v4
      with:
        name: VulkanEngine-Linux
        path: linux-build

    - name: Create Release
      uses: softprops/action-gh-release@v2
      if: github.ref == 'refs/heads/main'
      with:
        files: |
          windows-build/VulkanEngine.exe
          linux-build/VulkanEngine
        tag_name: v0.1.0-${{ github.sha }}
