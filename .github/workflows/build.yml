name: Build Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Vulkan SDK
        uses: humbletim/install-vulkan-sdk@v1.1.1
        with:
          version: latest
          cache: false

      - name: Verify Vulkan SDK installation
        run: |
          vulkaninfo || echo "Vulkan SDK not found!"

      # Set up the CMake environment
      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1
        with:
          cmake-version: '3.10'

      # Install dependencies (Linux-specific)
      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake

      # Build the project (Linux)
      - name: Build project (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release

      # Build the project (Windows)
      - name: Build project (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cmake -S . -B build -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release

      # Package release artifacts (Linux)
      - name: Package release (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir release
          cp -r build/* release/
          zip -r VulkanEngine-linux.zip release/

      # Package release artifacts (Windows)
      - name: Package release (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir release
          xcopy /E /I build\* release\
          7z a VulkanEngine-windows.zip ./release/*

      # Upload release artifacts
      - name: Upload release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: VulkanEngine-${{ matrix.os }}
          path: |
            VulkanEngine-*.zip